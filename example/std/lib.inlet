mod fs {
    // Pretend types existed in this language, and that `path` must be a `PathBuf`
    // Since only `program` can create `PathBuf`s, nobody else can work with the file system
    // unless they are given a `PathBuf` explicitly - that's capability safety!
    fn read(path: {*}) -> {*} {

    }

    fn read_dir(path: {*}) -> {*} {

    }
}

mod path {
    // Pretend this is a struct
    mod PathBuf {
        // Notice how `value` must have an origin of `program`
        // This means only `program` and `std` can construct paths!
        // In other words, paths can be seen as capabilities
        fn new(value: {program}) -> {*} {
            return 123;
        }
    }
}